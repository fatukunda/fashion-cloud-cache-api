{"version":3,"sources":["../../src/controllers/cacheController.js"],"names":["util","Util","cacheController","req","res","key","body","setError","send","cacheData","content","cacheService","createCache","cache","setSuccess","message","params","findCacheByKey","cacheToFind","createdCache","findAllKeysInCache","cacheKeys","length","map","item","push","removeKeyFromCache","removeAllKeysFromCache"],"mappings":";;;;;;;;;;;;;;;;;AAEA;;AACA;;AACA;;AAJA;AAMA,IAAMA,IAAI,GAAG,IAAIC,iBAAJ,EAAb;;IAEqBC,e;;;;;;;;;;AACnB;;;;;;;;;oDAMyBC,G,EAAKC,G;;;;;;AACpBC,gBAAAA,G,GAAQF,GAAG,CAACG,I,CAAZD,G;;AACR,oBAAI,CAACA,GAAL,EAAU;AACRL,kBAAAA,IAAI,CAACO,QAAL,CAAc,GAAd,EAAmB,qCAAnB;AACAP,kBAAAA,IAAI,CAACQ,IAAL,CAAUJ,GAAV;AACD;;AACKK,gBAAAA,S,GAAY;AAChBC,kBAAAA,OAAO,EAAE,sCADO;AAEhBL,kBAAAA,GAAG,EAAHA;AAFgB,iB;;;uBAKIM,yBAAaC,WAAb,CAAyBH,SAAzB,C;;;AAAdI,gBAAAA,K;AACNb,gBAAAA,IAAI,CAACc,UAAL,CAAgB,GAAhB,EAAqB,4BAArB,EAAmDD,KAAnD;iDACOb,IAAI,CAACQ,IAAL,CAAUJ,GAAV,C;;;;;AAEPJ,gBAAAA,IAAI,CAACO,QAAL,CAAc,GAAd,EAAmB,YAAMQ,OAAzB;iDACOf,IAAI,CAACQ,IAAL,CAAUJ,GAAV,C;;;;;;;;;;;;;;;;AAIX;;;;;;;;;;;;qDAMyBD,G,EAAKC,G;;;;;;AACpBC,gBAAAA,G,GAAQF,GAAG,CAACa,M,CAAZX,G;;oBACHA,G;;;;;AACHL,gBAAAA,IAAI,CAACO,QAAL,CAAc,GAAd,EAAmB,oBAAnB;kDACOP,IAAI,CAACQ,IAAL,CAAUJ,GAAV,C;;;;;uBAGmBO,yBAAaM,cAAb,CAA4BZ,GAA5B,C;;;AAApBa,gBAAAA,W;;oBACDA,W;;;;;AACGL,gBAAAA,K,GAAQ;AACZH,kBAAAA,OAAO,EAAE,sCADG;AAEZL,kBAAAA,GAAG,EAAHA;AAFY,iB;;uBAIaM,yBAAaC,WAAb,CAAyBC,KAAzB,C;;;AAArBM,gBAAAA,Y;AACNnB,gBAAAA,IAAI,CAACc,UAAL,CAAgB,GAAhB,EAAqB,YAArB,EAAmC;AAAEJ,kBAAAA,OAAO,EAAES,YAAY,CAACT;AAAxB,iBAAnC;kDACOV,IAAI,CAACQ,IAAL,CAAUJ,GAAV,C;;;AAETJ,gBAAAA,IAAI,CAACc,UAAL,CAAgB,GAAhB,EAAqB,WAArB,EAAkCI,WAAlC;kDACOlB,IAAI,CAACQ,IAAL,CAAUJ,GAAV,C;;;;;AAEPJ,gBAAAA,IAAI,CAACO,QAAL,CAAc,GAAd,EAAmB,aAAMQ,OAAzB;kDACOf,IAAI,CAACQ,IAAL,CAAUJ,GAAV,C;;;;;;;;;;;;;;;;;;;;;qDAIqBD,G,EAAKC,G;;;;;;;;uBAEbO,yBAAaS,kBAAb,E;;;AAAdP,gBAAAA,K;AACAQ,gBAAAA,S,GAAY,E;;sBACdR,KAAK,CAACS,MAAN,GAAe,C;;;;;AACjBT,gBAAAA,KAAK,CAACU,GAAN,CAAU,UAACC,IAAD,EAAU;AAClBH,kBAAAA,SAAS,CAACI,IAAV,CAAeD,IAAI,CAACnB,GAApB;AACD,iBAFD;AAGAL,gBAAAA,IAAI,CAACc,UAAL,CAAgB,GAAhB,EAAqB,YAArB,EAAmCO,SAAnC;kDACOrB,IAAI,CAACQ,IAAL,CAAUJ,GAAV,C;;;AAETJ,gBAAAA,IAAI,CAACc,UAAL,CAAgB,GAAhB,EAAqB,sBAArB,EAA6C,EAA7C;kDACOd,IAAI,CAACQ,IAAL,CAAUJ,GAAV,C;;;;;AAEPJ,gBAAAA,IAAI,CAACO,QAAL,CAAc,GAAd,EAAmB,aAAMQ,OAAzB;kDACOf,IAAI,CAACQ,IAAL,CAAUJ,GAAV,C;;;;;;;;;;;;;;;;;;;;;qDAIqBD,G,EAAKC,G;;;;;;AAC3BC,gBAAAA,G,GAAQF,GAAG,CAACa,M,CAAZX,G;;oBACHA,G;;;;;AACHL,gBAAAA,IAAI,CAACO,QAAL,CAAc,GAAd,EAAmB,iBAAnB;kDACOP,IAAI,CAACQ,IAAL,CAAUJ,GAAV,C;;;;;uBAGDO,yBAAae,kBAAb,CAAgCrB,GAAhC,C;;;AACNL,gBAAAA,IAAI,CAACc,UAAL,CAAgB,GAAhB,EAAqB,0BAArB;kDACOd,IAAI,CAACQ,IAAL,CAAUJ,GAAV,C;;;;;AAEPJ,gBAAAA,IAAI,CAACO,QAAL,CAAc,GAAd,EAAmB,aAAMQ,OAAzB;kDACOf,IAAI,CAACQ,IAAL,CAAUJ,GAAV,C;;;;;;;;;;;;;;;;;;;;;qDAIgBD,G,EAAKC,G;;;;;;;uBAEtBO,yBAAagB,sBAAb,E;;;AACN3B,gBAAAA,IAAI,CAACc,UAAL,CAAgB,GAAhB,EAAqB,+BAArB;kDACOd,IAAI,CAACQ,IAAL,CAAUJ,GAAV,C;;;;;AAEPJ,gBAAAA,IAAI,CAACO,QAAL,CAAc,GAAd,EAAmB,aAAMQ,OAAzB;kDACOf,IAAI,CAACQ,IAAL,CAAUJ,GAAV,C","sourcesContent":["/* eslint-disable array-callback-return */\n\nimport Util from '../utils/utils';\nimport cacheService from '../services/cacheService';\nimport cacheContent from '../utils/generateRandomCache';\n\nconst util = new Util();\n\nexport default class cacheController {\n  /**\n     * @param  {object} req\n     * * @param  {object} res\n     * @returns {Promise}\n     * @description Creates a new cache\n     */\n  static async createCache(req, res) {\n    const { key } = req.body;\n    if (!key) {\n      util.setError(401, 'Please provide a key for the cache.');\n      util.send(res);\n    }\n    const cacheData = {\n      content: cacheContent(),\n      key,\n    };\n    try {\n      const cache = await cacheService.createCache(cacheData);\n      util.setSuccess(201, 'Cache successfully created', cache);\n      return util.send(res);\n    } catch (error) {\n      util.setError(400, error.message);\n      return util.send(res);\n    }\n  }\n\n  /**\n     * @param  {object} req\n     * * @param  {object} res\n     * @returns {Promise}\n     * @description Get cached data given the key\n     */\n  static async getKeyCache(req, res) {\n    const { key } = req.params;\n    if (!key) {\n      util.setError(401, 'A key is required.');\n      return util.send(res);\n    }\n    try {\n      const cacheToFind = await cacheService.findCacheByKey(key);\n      if (!cacheToFind) {\n        const cache = {\n          content: cacheContent(),\n          key,\n        };\n        const createdCache = await cacheService.createCache(cache);\n        util.setSuccess(200, 'Cache miss', { content: createdCache.content });\n        return util.send(res);\n      }\n      util.setSuccess(200, 'Cache hit', cacheToFind);\n      return util.send(res);\n    } catch (error) {\n      util.setError(400, error.message);\n      return util.send(res);\n    }\n  }\n\n  static async findAllKeysInCache(req, res) {\n    try {\n      const cache = await cacheService.findAllKeysInCache();\n      const cacheKeys = [];\n      if (cache.length > 0) {\n        cache.map((item) => {\n          cacheKeys.push(item.key);\n        });\n        util.setSuccess(200, 'Cache keys', cacheKeys);\n        return util.send(res);\n      }\n      util.setSuccess(200, 'No cache keys found.', []);\n      return util.send(res);\n    } catch (error) {\n      util.setError(400, error.message);\n      return util.send(res);\n    }\n  }\n\n  static async removeKeyFromCache(req, res) {\n    const { key } = req.params;\n    if (!key) {\n      util.setError(400, 'Provide the key');\n      return util.send(res);\n    }\n    try {\n      await cacheService.removeKeyFromCache(key);\n      util.setSuccess(200, 'Key successfully removed');\n      return util.send(res);\n    } catch (error) {\n      util.setError(400, error.message);\n      return util.send(res);\n    }\n  }\n\n  static async removeAllKeys(req, res) {\n    try {\n      await cacheService.removeAllKeysFromCache();\n      util.setSuccess(200, 'All Keys successfully removed');\n      return util.send(res);\n    } catch (error) {\n      util.setError(400, error.message);\n      return util.send(res);\n    }\n  }\n}\n"],"file":"cacheController.js"}